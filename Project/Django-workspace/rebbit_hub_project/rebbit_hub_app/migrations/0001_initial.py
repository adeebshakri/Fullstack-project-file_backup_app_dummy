# Generated by Django 2.2 on 2020-09-14 16:11

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.AutoField(primary_key=True, serialize=False)),
                ('device_name', models.IntegerField()),
            ],
            options={
                'db_table': 'device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilesBackedup',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(blank=True, max_length=50, null=True)),
                ('file_path', models.CharField(blank=True, max_length=150, null=True)),
                ('is_backedup', models.TextField(blank=True, null=True)),
                ('file_size', models.FloatField(blank=True, null=True)),
                ('file_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'files_backedup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecycleBin',
            fields=[
                ('recyclebin_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_size', models.FloatField(blank=True, null=True)),
                ('file_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recycle_bin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('space_used', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('space_left', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('password', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('subscription_id', models.IntegerField(primary_key=True, serialize=False)),
                ('subscription_name', models.CharField(blank=True, max_length=50, null=True)),
                ('subscripton_size_capacity', models.FloatField(blank=True, null=True)),
                ('subscription_size_used', models.FloatField(blank=True, null=True)),
                ('subscription_size_left', models.FloatField(blank=True, null=True)),
                ('subscription_start_date', models.DateTimeField(blank=True, null=True)),
                ('subscription_end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('version_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(blank=True, max_length=50, null=True)),
                ('file_path', models.CharField(blank=True, max_length=150, null=True)),
                ('is_backedup', models.TextField(blank=True, null=True)),
                ('version_size', models.FloatField(blank=True, null=True)),
                ('version_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'version',
                'managed': False,
            },
        ),
    ]
